### Health Check
GET http://localhost:8080/health
Accept: application/json

### Register Company
POST http://localhost:8080/admin/company/register
Content-Type: application/json
Accept: application/json

{
  "name": "Test Company",
  "email": "test@example.com",
  "address": "123 Test Street, Test City",
  "phone": "+1234567890"
}

### Company Login
POST http://localhost:8080/auth/company/login
Content-Type: application/json
Accept: application/json

{
  "email": "test@example.com",
  "password": "twBL1Oa2MTD6"
}

> {%
    console.log("Login response body:", response.body);

    // Attempt to get the token
    let token = response.body.access_token;
    let companyId = response.body.company?.id;

    if (token) {
        console.log("Captured token:", token);
        client.global.set("accessToken", token);
        console.log("'accessToken' has been set globally for the session.");
    } else {
        console.error("ERROR: 'access_token' not found in the response body!");
    }

    if (companyId) {
        console.log("Captured company ID:", companyId);
        client.global.set("companyId", companyId);
        console.log("'companyId' has been set globally for the session.");
    } else {
        console.error("ERROR: 'company.id' not found in the response body!");
    }
%}


### Get Company Details
GET http://localhost:8080/api/company
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

### Upload Card CSV
# Use a multipart form request to upload a CSV file
# Note: The handler implementation expects authentication, but the router doesn't apply auth middleware
POST http://localhost:8080/api/company/upload-csv
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{accessToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="employees.csv"
Content-Type: text/csv

< ./employee.csv
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Get Cards To Issue
# Note: The handler implementation expects authentication, but the router doesn't apply auth middleware
GET http://localhost:8080/api/company/card-to-issue
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{}

### Issue New Cards
# This endpoint issues new cards for employees that were uploaded via CSV
POST http://localhost:8080/api/company/issue-cards
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

> {%
    console.log("Issue Cards response body:", response.body);

    if (response.body.issued_count !== undefined) {
        console.log(`Successfully issued ${response.body.issued_count} cards`);
    } else if (response.body.error) {
        console.error(`Error: ${response.body.error}`);
        if (response.body.details) {
            console.error(`Details: ${response.body.details}`);
        }
    }
%}

### Verify Cards Status After Issuing
# This endpoint gets the cards to issue again to verify they've been processed
GET http://localhost:8080/api/company/to-issue
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

> {%
    console.log("Cards status after issuing:", response.body);

    if (response.body.cards) {
        const generatedCards = response.body.cards.filter(card => card.status === "generated");
        console.log(`Generated cards: ${generatedCards.length} out of ${response.body.count}`);
    }
%}


### Get all cards for a company
GET http://localhost:8080/api/cards
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

> {%
    console.log("Get cards response body:", response.body);

    if (response.body.cards && response.body.cards.length > 0) {
        const firstCard = response.body.cards[0];
        console.log("First card:", firstCard);
        client.global.set("cardId", firstCard.id);
        console.log("'cardId' has been set globally for the session:", firstCard.id);
    } else {
        console.error("ERROR: No cards found in the response!");
    }
%}

### Update Card Spending Limit
POST http://localhost:8080/api/cards/update/spending-limit?cardId={{cardId}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{accessToken}}

{
  "spending_limit": 5000
}

> {%
    console.log("Update Spending Limit response body:", response.body);

    if (response.body.card) {
        console.log("Card updated successfully with spending limit:", response.body.card.spending_limit);
    } else if (response.body.error) {
        console.error(`Error: ${response.body.error}`);
    }
%}
